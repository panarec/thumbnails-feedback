// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(uuid()) 
  email     String   @unique
  username  String?  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments Comment[]
  tests     Test[]
  votes     Vote[]
}

model Test {
  id        String   @id @default(uuid())
  test_name      String
  test_duration  Int
  video_description String?
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  thumbnails Thumbnail[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Thumbnail {
  id        String   @id @default(uuid())
  title    String
  thumbnail_url String
  votes    Vote[]
  comments Comment[]
  testId   String
  test     Test     @relation(fields: [testId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  comment   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  thumbnailId String
  thumbnail Thumbnail @relation(fields: [thumbnailId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  thumbnailId String
  thumbnail Thumbnail @relation(fields: [thumbnailId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}